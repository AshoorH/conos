% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conclass.R
\docType{class}
\name{Conos-class}
\alias{Conos-class}
\alias{Conos}
\title{Conos reference class}
\description{
Conos reference class
}
\details{
The class encompasses sample collections, providing methods for calculating and visualizing joint graph and communities.
}
\section{Methods}{

\describe{
\item{\code{correctGenes(genes = NULL, n.od.genes = 500, fading = 10,
  fading.const = 0.5, max.iters = 15, tol = 0.005, name = "diffusion",
  verbose = TRUE, count.matrix = NULL, normalize = TRUE)}}{Smooth expression of genes, so they better represent structure of the graph.

       Use diffusion of expression on graph with the equation dv = exp(-a * (v + b))

       Params:

       - genes: list of genes for smoothing

       - n.od.genes: if 'genes' is NULL, top n.od.genes of overdispersed genes are taken across all samples. Default: 500.

       - fading: level of fading of expression change from distance on the graph (parameter 'a' of the equation). Default: 10.

       - fading.const: minimal penalty for each new edge during diffusion (parameter 'b' of the equation). Default: 0.5.

       - max.iters: maximal number of diffusion iterations. Default: 15.

       - tol: tolerance after which the diffusion stops. Default: 5e-3.

       - name: name to save the correction. Default: diffusion.

       - verbose: verbose mode. Default: TRUE.
       - count.matrix: alternative gene count matrix to correct. Default: joint count matrix for all datasets.
      }

\item{\code{embedGraph(method = "largeVis", M = 1, gamma = 1, alpha = 0.1,
  perplexity = NA, sgd_batches = 1e+08, seed = 1, verbose = TRUE,
  target.dims = 2, n.cores = NULL, ...)}}{Generate an embedding of a joint graph.

       Params:

       - method: embedding method. Currently largeVis and UMAP are supported

       - M, gamma, alpha, sgd__batched - largeVis parameters (defaults are 1, 1, 0.01, 1e8 respectively).

       - perplexity: perplexity passed to largeVis (defaults to NA).

       - seed: random seed for the largeVis algorithm. Default: 1.

       - target.dims: numer of dimensions for the reduction. Default: 2. Higher dimensions can be used to generate embeddings for subsequent reductions by other methods, such as tSNE

       - n.cores: number of cores, overrides class field
       - verbose: verbose mode. Default: TRUE.
       - ...: additional arguments, passed to UMAP embedding (run ?conos:::embedGraphUmap for more info)
      }

\item{\code{getClusterCountMatrices(clustering = NULL, groups = NULL,
  common.genes = TRUE, omit.na.cells = TRUE)}}{Estimate per-cluster molecule count matrix by summing up the molecules of each gene for all of the cells in each cluster.


       Params:

       - clustering: the name of the clustering that should be used
       - groups: explicitly provided cell grouping

       - common.genes: bring individual sample matrices to a common gene list
       - omit.na.cells: if set to FALSE, the resulting matrices will include a first column named 'NA' that will report total molecule counts for all of the cells that were not covered by the provided factor.
       

       Return: a list of per-sample uniform dense matrices with rows being genes, and columns being clusters
      }

\item{\code{plotClusterStability(clustering = NULL, what = "all")}}{Plot cluster stability statistics.

       Params:

       - clustering : name of the clustering result to show
       - what : show a specific plot (ari - adjusted rand index, fjc - flat Jaccard, hjc - hierarchical Jaccard, dend - cluster dendrogram)
      }

\item{\code{propagateLabels(labels, method = "diffusion", ...)}}{Estimate labeling distribution for each vertex, based on provided labels.

     Params:

     - method: type of propagation. Either 'diffusion' or 'solver'. 'solver' gives better results,
      but has bad asymptotics, so is inappropriate for datasets > 20k cells. Default: 'diffusion.'

     - ...: additional arguments for conos:::propagateLabels* functions

     

     Return: matrix with distribution of label probabilities for each vertex by rows.
    }
}}

